[{"C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\index.js":"1","C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\App.js":"2","C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\MapChart.js":"3","C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\Info.js":"4","C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\Card.js":"5"},{"size":218,"mtime":1610397909393,"results":"6","hashOfConfig":"7"},{"size":559,"mtime":1610484818885,"results":"8","hashOfConfig":"7"},{"size":1382,"mtime":1610504028655,"results":"9","hashOfConfig":"7"},{"size":2353,"mtime":1610501513098,"results":"10","hashOfConfig":"7"},{"size":3713,"mtime":1610507522909,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"871lml",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\index.js",[],["24","25"],"C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\App.js",[],"C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\MapChart.js",["26"],"C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\Info.js",["27"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Card from './Card';\r\n\r\nconst immunizationStatsURL = '/projects/20201221-plan-your-shot-map/data/plan-your-shot.json';\r\nconst covidStatsURL = 'https://api.covidtracking.com/v1/states/current.json';\r\n\r\nconst Info = (props) => {\r\n    const [immunizationData, setImmunizationData] = useState([]);\r\n    const [covidData, setCovidData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const fetchData = async () => {\r\n            const immunizationDataRes = await axios.get(immunizationStatsURL);\r\n            setImmunizationData([...immunizationDataRes.data]);\r\n            const covidDataRes = await axios.get(covidStatsURL);\r\n            setCovidData([...covidDataRes.data]);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const getStateImmunizationData = (desiredState) => {\r\n        if(!desiredState){\r\n            return;\r\n        }\r\n        const result = immunizationData.filter(obj => obj.state === desiredState);\r\n        return result[0];\r\n    }\r\n\r\n    const getStateCovidData = (desiredState) => {\r\n        if(!desiredState){\r\n            return;\r\n        }\r\n        const hoveredState = getStateImmunizationData(desiredState);\r\n        const result = covidData.filter(obj => obj.state === hoveredState.abbr);\r\n        return result[0];\r\n    }\r\n\r\n    //props.content sent down to contentAvailable, if we hover over a state props.content is truthy else falsy\r\n    //stateData will be object containing vaccination and infection data about the hovered over state\r\n    const renderCard = (contentAvailable, stateImmunizationData, stateCovidData) => {\r\n        if(contentAvailable){\r\n            return (\r\n                <ReactTooltip>\r\n                    <Card content={props.content} immunizationData={stateImmunizationData} covidData={stateCovidData}>\r\n                    </Card>\r\n                </ReactTooltip>\r\n            )\r\n        }\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div id=\"parent\">\r\n            {loading ? \"\" : renderCard(props.content, getStateImmunizationData(props.content), getStateCovidData(props.content))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","C:\\Users\\alper\\Desktop\\State Herd Immunity Project\\stateherdimmunity\\src\\components\\Card.js",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":5,"nodeType":"36","messageId":"37","endLine":3,"endColumn":18},{"ruleId":"34","severity":1,"message":"38","line":1,"column":38,"nodeType":"36","messageId":"37","endLine":1,"endColumn":44},{"ruleId":"34","severity":1,"message":"39","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":19},{"ruleId":"34","severity":1,"message":"40","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":14},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'ZoomableGroup' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]